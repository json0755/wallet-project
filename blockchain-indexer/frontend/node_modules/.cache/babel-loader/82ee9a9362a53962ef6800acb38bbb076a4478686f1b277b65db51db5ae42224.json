{"ast":null,"code":"var _jsxFileName = \"/home/bape/openspace_code/denglian/wallet-project/blockchain-indexer/frontend/src/components/WalletConnect.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button, Box, Typography, Chip } from '@mui/material';\nimport { AccountBalanceWallet, Link, LinkOff } from '@mui/icons-material';\nimport { useWallet } from '../contexts/WalletContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletConnect = () => {\n  _s();\n  const {\n    account,\n    chainId,\n    isConnecting,\n    isConnected,\n    isAnvilNetwork,\n    connectWallet,\n    disconnectWallet,\n    switchToAnvilNetwork\n  } = useWallet();\n\n  // 格式化地址显示\n  const formatAddress = address => {\n    if (!address) return '';\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\n  };\n\n  // 获取网络状态颜色\n  const getNetworkChipColor = () => {\n    if (!isConnected) return 'default';\n    return isAnvilNetwork ? 'success' : 'warning';\n  };\n\n  // 获取网络显示文本\n  const getNetworkText = () => {\n    if (!isConnected) return '未连接';\n    if (isAnvilNetwork) return 'Anvil本地网络';\n    return `Chain ID: ${chainId}`;\n  };\n  if (!isConnected) {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      startIcon: /*#__PURE__*/_jsxDEV(AccountBalanceWallet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this),\n      onClick: connectWallet,\n      disabled: isConnecting,\n      sx: {\n        borderRadius: '20px',\n        textTransform: 'none',\n        fontWeight: 600\n      },\n      children: isConnecting ? '连接中...' : '连接钱包'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(Chip, {\n      icon: isAnvilNetwork ? /*#__PURE__*/_jsxDEV(Link, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(LinkOff, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 43\n      }, this),\n      label: getNetworkText(),\n      color: getNetworkChipColor(),\n      size: \"small\",\n      onClick: !isAnvilNetwork ? switchToAnvilNetwork : undefined,\n      sx: {\n        cursor: !isAnvilNetwork ? 'pointer' : 'default',\n        '&:hover': {\n          backgroundColor: !isAnvilNetwork ? 'warning.light' : undefined\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-end'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          fontWeight: 600\n        },\n        children: formatAddress(account)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        onClick: disconnectWallet,\n        sx: {\n          minWidth: 'auto',\n          padding: '2px 8px',\n          fontSize: '0.75rem',\n          textTransform: 'none',\n          color: 'text.secondary'\n        },\n        children: \"\\u65AD\\u5F00\\u8FDE\\u63A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletConnect, \"cMxig5HYwbyze8LmupAxMShjicM=\", false, function () {\n  return [useWallet];\n});\n_c = WalletConnect;\nexport default WalletConnect;\nvar _c;\n$RefreshReg$(_c, \"WalletConnect\");","map":{"version":3,"names":["React","Button","Box","Typography","Chip","AccountBalanceWallet","Link","LinkOff","useWallet","jsxDEV","_jsxDEV","WalletConnect","_s","account","chainId","isConnecting","isConnected","isAnvilNetwork","connectWallet","disconnectWallet","switchToAnvilNetwork","formatAddress","address","slice","getNetworkChipColor","getNetworkText","variant","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","sx","borderRadius","textTransform","fontWeight","children","display","alignItems","gap","icon","label","color","size","undefined","cursor","backgroundColor","flexDirection","minWidth","padding","fontSize","_c","$RefreshReg$"],"sources":["/home/bape/openspace_code/denglian/wallet-project/blockchain-indexer/frontend/src/components/WalletConnect.js"],"sourcesContent":["import React from 'react';\nimport { Button, Box, Typography, Chip } from '@mui/material';\nimport { AccountBalanceWallet, Link, LinkOff } from '@mui/icons-material';\nimport { useWallet } from '../contexts/WalletContext';\n\nconst WalletConnect = () => {\n  const {\n    account,\n    chainId,\n    isConnecting,\n    isConnected,\n    isAnvilNetwork,\n    connectWallet,\n    disconnectWallet,\n    switchToAnvilNetwork,\n  } = useWallet();\n\n  // 格式化地址显示\n  const formatAddress = (address) => {\n    if (!address) return '';\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\n  };\n\n  // 获取网络状态颜色\n  const getNetworkChipColor = () => {\n    if (!isConnected) return 'default';\n    return isAnvilNetwork ? 'success' : 'warning';\n  };\n\n  // 获取网络显示文本\n  const getNetworkText = () => {\n    if (!isConnected) return '未连接';\n    if (isAnvilNetwork) return 'Anvil本地网络';\n    return `Chain ID: ${chainId}`;\n  };\n\n  if (!isConnected) {\n    return (\n      <Button\n        variant=\"contained\"\n        startIcon={<AccountBalanceWallet />}\n        onClick={connectWallet}\n        disabled={isConnecting}\n        sx={{\n          borderRadius: '20px',\n          textTransform: 'none',\n          fontWeight: 600,\n        }}\n      >\n        {isConnecting ? '连接中...' : '连接钱包'}\n      </Button>\n    );\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n      {/* 网络状态指示器 */}\n      <Chip\n        icon={isAnvilNetwork ? <Link /> : <LinkOff />}\n        label={getNetworkText()}\n        color={getNetworkChipColor()}\n        size=\"small\"\n        onClick={!isAnvilNetwork ? switchToAnvilNetwork : undefined}\n        sx={{\n          cursor: !isAnvilNetwork ? 'pointer' : 'default',\n          '&:hover': {\n            backgroundColor: !isAnvilNetwork ? 'warning.light' : undefined,\n          },\n        }}\n      />\n\n      {/* 账户信息 */}\n      <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-end' }}>\n        <Typography variant=\"body2\" sx={{ fontWeight: 600 }}>\n          {formatAddress(account)}\n        </Typography>\n        <Button\n          size=\"small\"\n          onClick={disconnectWallet}\n          sx={{\n            minWidth: 'auto',\n            padding: '2px 8px',\n            fontSize: '0.75rem',\n            textTransform: 'none',\n            color: 'text.secondary',\n          }}\n        >\n          断开连接\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default WalletConnect;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}